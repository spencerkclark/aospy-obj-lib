"""Interpolation and zero finding routines."""

import xray
import numpy as np
from scipy.interpolate import interp1d
from collections import OrderedDict

def axis_number_from_da(da, dim):
    """Returns the axis number of a given named dim in a DataArray"""

    return da.coords.keys().index(dim)

def replace_dim(da, dim, values):
    """Replaces a dimension in a coords OrderedDict"""
    coords = da.coords
    new_coords = OrderedDict()
    for coord in coords:
        if dim != coord.name:
            new_coords[coord.name] = coord
        else:
            new_coords[dim] = values
    return new_coords

def interp1d_xray(da, dim, npoints=18000):
    """Interpolates the DataArray to finer resolution

    Parameters
    ----------
    da : DataArray
         data to interpolate
    dim : str
         dimension name to interpolate along
    npoints : int
         number of points to expand dimension to

    Returns
    -------
    interp : DataArray
         interpolated DataArray
    """

    function = interp1d(da[dim].values, da.values,
                        axis=axis_number_from_da(da, dim))
    coord_interp = np.linspace(da[dim][0], da[dim][-1],
                               npoints, endpoint=True)
    values_interp = function(coord_interp)
    da_interp = xray.DataArray(values_interp,
                               coords=replace_dim(da, dim, coord_interp))
    da_interp_ = da_interp.copy(deep=True)
    signs = np.sign(da_interp_)
    mask = signs.diff(dim, label='lower') != 0
    zeros = mask * mask[dim]
    zeros = zeros.where(zeros != 0)

    return zeros
